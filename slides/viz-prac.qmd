---
title: "Trực quan hóa"
format: 
  revealjs:
    df-print: paged
    fig-format: png
    footer: |
      [View book](../viz-prac.html)
---

```{r}
#| warning: false
#| message: false

library(dplyr)
library(tidyr)
library(ggplot2)
```

## Biểu đồ 1

![](../img/viz/nature.png){fig-align="center"}

## Tạo data

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true

country <- c(
  "Angola",
  "Papua New Guinea",
  "Pakistan",
  "Chad",
  "Ethiopia",
  "Kenya",
  "Nigeria",
  "Liberia",
  "Burkina Faso",
  "India"
)
coverage <- c(-0.14, -0.35, 0.12, 0.14, 0.32, 0.07, 0.2, 0.18, 0.3, 0.35)
inequality <- c(0.1, 0.08, 0.05, 0.01, 0.005, -0.06, -0.07, -0.11, -0.13, -0.16)
df_plot <- data.frame(country, coverage, inequality)
```

:::

::: {.column width="50%"}

```{r}
df_plot
```

:::

::::

## Vẽ trục tọa độ {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
)
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 5
#| out-width: "100%"
ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
)
```

:::

::::

## Vẽ các điểm {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point()
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 5
#| out-width: "100%"
ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point()
```

:::

::::

## Hiện tên nước {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point() +
  geom_text(aes(label = country))
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 5
#| out-width: "100%"
ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point() +
  geom_text(aes(label = country))
```

:::

::::

## Vị trí tên nước {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point() +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 5
#| out-width: "100%"
ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point() +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::::

## Tô màu

:::: columns

::: {.column width="30%"}

```{r}
#| echo: true

df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$color <- c(
  "purple",
  "blue",
  "yellow",
  "purple",
  "purple",
  "purple",
  "purple",
  "purple",
  "purple",
  "yellow"
)
```

:::

::: {.column width="70%"}

```{r}
df_plot
```

:::

::::

## Tô màu {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point(aes(size = size, color = color)) +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"

ggplot(
    df_plot, 
    aes(x = coverage, y = inequality)
  ) +
  geom_point(aes(size = size, color = color)) +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::::

## Các nước không tên

:::: columns

::: {.column width="30%"}

```{r}
#| echo: true

set.seed(123)
np <- 50
rd <- data.frame(country = rep("", np),
                 coverage = rnorm(n = np, mean = 0.1, sd = 0.12),
                 inequality = rnorm(n = np, mean = -0.05, sd = 0.04),
                 size = rnorm(n = np, mean = 1, sd = 0.4),
                 color = sample(c("red", "green", "darkblue", "yellow", "blue", "purple"), np, replace = T))
df_plot <- rbind(df_plot, rd)
df_plot$color <- factor(df_plot$color)
```

:::

::: {.column width="70%"}

```{r}
df_plot[5:nrow(df_plot),]
```

:::

::::

## Vẽ thêm điểm

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(
  df_plot, 
  aes(x = coverage, y = inequality)
) +
  geom_point(aes(size = size, color = color)) +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"

ggplot(
    df_plot, 
    aes(x = coverage, y = inequality)
  ) +
  geom_point(aes(size = size, color = color)) +
  geom_text(
    aes(label = country), 
    hjust = -0.2, vjust = 0.2
  )
```

:::

::::

## Kết quả

:::: columns

::: {.column width="49.5%"}

```{r}
#| warning: false
#| fig-width: 5.6
#| fig-height: 6.7
#| out-width: "100%"

cols <- c(
  "red" = "#fa8495",
  "green" = "#4ca258",
  "darkblue" = "#6493bb",
  "yellow" = "#d7c968",
  "blue" = "#7dd8f3",
  "purple" = "#bc5c91"
)

ggplot(df_plot, aes(x = coverage, y = inequality)) +
  geom_point(aes(size = size, color = color), alpha = 0.8) +
  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +
  geom_vline(xintercept = 0, color = "#999999") +
  geom_hline(yintercept = 0, color = "#999999") +
  scale_x_continuous(breaks = c(-0.25, 0, 0.25, 0.5),
                     limits = c(-0.4, 0.55)) +
  scale_y_continuous(breaks = c(-0.1, 0, 0.1), limits = c(-0.16, 0.1)) +
  scale_size_continuous(
    breaks = c(2, 4, 6, 8),
    labels = c("50 million", "100 million", "150 million", "200 million"),
    range = c(0, 8),
    guide = guide_legend(order = 1)
  ) +
  scale_color_manual(
    values = cols,
    breaks = c("red", "green", "darkblue", "yellow", "blue", "purple"),
    labels = c(
      "Central Europe, Eastern Europe and Central Asia",
      "Latin America and Caribbean",
      "North Africa and Middle East",
      "South Asia",
      "Southeast Asia, East Asia and Oceania",
      "Sub-Saharan Africa"
    ),
    guide = guide_legend(order = 2)
  ) +
  labs(x = "Change in MCV1 coverage (2019-2000)",
       y = "Change in absolute geographical inequality (2019-2000)",
       size = NULL,
       color = NULL) +
  theme_classic() +
  theme(
    legend.position = "top",
    legend.direction = "vertical",
    legend.text = element_text(size = 11),
    legend.key.height = unit(0.5, "cm"),
    axis.text = element_text(size = 11)
  )
```

:::

::: {.column width="50.5%"}

![](../img/viz/nature.png)

:::

::::

## Biểu đồ 2

![](../img/viz/lancet.svg){fig-align="center"}

## Tạo data

:::: columns

::: {.column width="30%"}

```{r}
#| echo: true
region <- c(1:21)

sup_region <- c(
  "green",
  "green",
  "green",
  "green",
  "blue",
  "turquoise",
  "purple",
  "orange",
  "purple",
  "turquoise",
  "red",
  "red",
  "red",
  "orange",
  "turquoise",
  "purple",
  "purple",
  "red",
  "orange",
  "pink",
  "purple"
)

assoc <- c(114.8, 89.0, 86, 79.4, 76.8, 74.0, 72.3, 71.6, 70.7, 68.0, 65.1, 63.2, 63.0, 54.8, 53.3, 52.5, 51.0, 50.6, 43.3, 42.0, 28.0)

assoc_up <- c(145.3, 112.6, 109.8, 101.6, 101.2, 105.6, 93.4, 98.0, 92.3, 100.9, 90.5, 85.4, 83.1, 74.9, 74.3, 73.0, 71.5, 70.9, 66.1, 59.5, 39.9)

assoc_lo <- c(90.4, 70.5, 65.9, 61.7, 57.2, 48.8, 55.1, 51.4, 53.2, 43.2, 45.5, 45.4, 47.1, 38.9, 37.7, 37.0, 35.4, 34.7, 27.4, 28.7, 18.8)

attr <- c(27.3, 21.4, 20.7, 19.4, 21.5, 19.9, 18.6, 17.0, 16.5, 16.6, 16.2, 15.9, 15.2, 14.4, 13.8, 11.7, 12.3, 13.0, 10.5, 11.2, 6.5)

attr_up <- c(35.3, 28.1, 27.7, 25.9, 29.8, 28.5, 24.7, 23.2, 23.1, 25.0, 23.2, 21.9, 20.6, 20.0,  19.5, 16.6, 17.5, 18.5, 16.0, 16.3, 9.4)

attr_lo <- c(20.9, 16.3, 14.9, 14.3, 15.1, 13.1, 13.9, 12.1, 11.6, 10.5, 11.0, 11.1, 11.1, 10.0, 9.5, 8.0, 8.3, 8.8, 6.5, 7.5, 4.3)

df_plot <- data.frame(region, sup_region, assoc, assoc_up, assoc_lo, attr, attr_up, attr_lo)

df_plot <- df_plot |>
  mutate(region = factor(region),
         sup_region = factor(
           sup_region,
           levels = c("turquoise", "purple", "red", "pink", "blue", "orange", "green")
         ))
```

:::

::: {.column width="70%"}

```{r}
#| echo: false

df_plot
```

:::

::::

## Vẽ trục tọa độ {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
ggplot(df_plot, aes(x = region))
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"
ggplot(df_plot, aes(x = region))
```

:::

::::

## Vẽ các cột {auto-animate="true"}

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc), stat = "identity")
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc), stat = "identity")
```

:::

::::

## Tô màu

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity")
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity")
```

:::

::::

## Chỉnh màu

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
cols <- c(
  "green" = "#a5d474",
  "orange" = "#f5b168",
  "blue" = "#74accf",
  "pink" = "#f7c6dc",
  "red" = "#f48073",
  "purple" = "#b2b0d5",
  "turquoise" = "#82cec2"
)

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity") +
  scale_fill_manual(values = cols)
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"
cols <- c(
  "green" = "#a5d474",
  "orange" = "#f5b168",
  "blue" = "#74accf",
  "pink" = "#f7c6dc",
  "red" = "#f48073",
  "purple" = "#b2b0d5",
  "turquoise" = "#82cec2"
)

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity") +
  scale_fill_manual(values = cols)
```

:::

::::

## Vẽ khoảng tin cậy

:::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  scale_fill_manual(values = cols)
```

:::

::: {.column width="50%"}

```{r}
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  scale_fill_manual(values = cols)
```

:::

::::

## Vẽ thêm cột

:::: columns

::: {.column width="50%"}

```{r}
#| warning: false
#| echo: true
#| eval: false

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region, alpha = "a"), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  geom_bar(aes(y = attr, alpha = "b"), width = 0.65, stat = "identity") +
  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +
  scale_fill_manual(values = cols)
```

:::

::: {.column width="50%"}

```{r}
#| warning: false
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"

ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region, alpha = "a"), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  geom_bar(aes(y = attr, alpha = "b"), width = 0.65, stat = "identity") +
  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +
  scale_fill_manual(values = cols)
```

:::

::::

## Chỉnh màu

:::: columns

::: {.column width="50%"}

```{r}
#| warning: false
#| echo: true
#| eval: false
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region, alpha = "a"), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  geom_bar(aes(y = attr, alpha = "b"), width = 0.65, stat = "identity") +
  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +
  scale_fill_manual(values = cols) +
  scale_alpha_discrete(range = c(1, 0.8),
                       guide = guide_legend(override.aes = list(fill = c("gray70", "gray20"))))
```

:::

::: {.column width="50%"}

```{r}
#| warning: false
#| fig-width: 5
#| fig-height: 4
#| out-width: "100%"
ggplot(df_plot, aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region, alpha = "a"), stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  geom_bar(aes(y = attr, alpha = "b"), width = 0.65, stat = "identity") +
  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +
  scale_fill_manual(values = cols) +
  scale_alpha_discrete(range = c(1, 0.8),
                       guide = guide_legend(override.aes = list(fill = c("gray70", "gray20"))))
```

:::

::::

## Kết quả

:::: columns

::: {.column width="49%"}

```{r}
#| warning: false
#| code-fold: true
#| fig-width: 8
#| fig-height: 7
#| out-width: "100%"
cols <- c(
  "green" = "#a5d474",
  "orange" = "#f5b168",
  "blue" = "#74accf",
  "pink" = "#f7c6dc",
  "red" = "#f48073",
  "purple" = "#b2b0d5",
  "turquoise" = "#82cec2"
)

df_plot |>
  mutate(region = factor(region),
         sup_region = factor(
           sup_region,
           levels = c("turquoise", "purple", "red", "pink", "blue", "orange", "green")
         )) |>
  ggplot(aes(x = region)) +
  geom_bar(aes(y = assoc, fill = sup_region, alpha = "a"), stat = "identity") +
  geom_bar(aes(y = attr, alpha = "b"), width = 0.65, stat = "identity") +
  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +
  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +
  scale_x_discrete(
    expand = c(0, 0),
    labels = c(
      "Western sub-Saharan Africa",
      "Eastern sub-Saharan Africa",
      "Central sub-Saharan Africa",
      "Southern sub-Saharan Africa",
      "South Asia",
      "Eastern Europe",
      "Southern Latin America",
      "Oceania",
      "High-income North America",
      "Central Europe",
      "Caribbean",
      "Andean Latin America",
      "Tropical Latin America",
      "Southeast Asia",
      "Central Asia",
      "Western Europe",
      "High-income North America",
      "Central Latin America",
      "East Asia",
      "North Africa and Middle East",
      "Australasia"
    )
  ) +
  scale_y_continuous(
    limits = c(0, 165),
    breaks = c(0, 50, 100, 150),
    expand = c(0, 0)
  ) +
  scale_fill_manual(
    values = cols,
    labels = c(
      "Central Europe, eastern Europe, and central Asia",
      "High income",
      "Latin America and Caribbean",
      "North Africa and Middle East",
      "South Asia",
      "Southern Asia, east Asia, and Oceania",
      "Sub-Saharan Africa"
    ),
    guide = guide_legend(order = 1)
  ) +
  scale_alpha_discrete(
    range = c(1, 0.8),
    guide = guide_legend(override.aes = list(fill = c("gray70", "gray20")), order = 2),
    labels = c("Associated with resistance", "Attributable to resistance")
  ) +
  labs(x = "GBD region",
       y = "Deaths (rate per 100000 population)",
       fill = "GBD super-region",
       alpha = "Resistance") +
  theme_classic() +
  theme(
    axis.text = element_text(size = 11),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = c(0.57, 0.86),
    legend.box = "horizontal",
    legend.key.height = unit(0.5, "cm"),
    legend.text = element_text(size = 10),
    legend.title = element_text(face = "bold"),
    plot.margin = margin(10, 10, 10, 60)
  )
```

:::

::: {.column width="51%"}

![](../img/viz/lancet.svg)

:::

::::
